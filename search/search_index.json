{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":""},{"location":"#_1","title":"\u5de5\u4f5c\u53f0","text":"<p>\u963f\u91cc\u4e91</p> <p>github</p> <p>gitee</p>"},{"location":"#_2","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/","title":"docker","text":"<ul> <li>\u5b89\u88c5\u914d\u7f6e</li> <li>\u4f7f\u7528<ul> <li>ubtun\u5f00\u53d1</li> <li>\u4f7f\u7528\u4ed3\u5e93hanlp\u955c\u50cf</li> <li>\u914d\u7f6eapt-get</li> </ul> </li> <li>\u8fdb\u9636-\u81ea\u52a8\u6784\u5efa<ul> <li>GitHub Actions</li> </ul> </li> <li>play-with-docker</li> <li>docker-compose<ul> <li>Step 1: Define the application dependencies</li> <li>Step 2: Create a Dockerfile</li> <li>Step 3: Define services in a Compose file</li> <li>Step 4: Build and run your app with Compose</li> <li>Step 5: Edit the Compose file to add a bind mount</li> <li>Step 6: Re-build and run the app with Compose &amp;&amp; change app.py</li> </ul> </li> </ul>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/#_1","title":"\u5b89\u88c5\u914d\u7f6e","text":"<ul> <li> <p>\u5b98\u7f51\u4e0b\u8f7d</p> </li> <li> <p>\u914d\u7f6e\u4ee3\u7406 (Setting-&gt;Resources-&gt;Proxies) \u5982\u679c\u65e0\u9700\u4ee3\u7406\u8bbf\u95ee\u5916\u7f51\u5219\u65e0\u9700\u8bbe\u7f6e</p> </li> <li>\u5171\u4eab\u76ee\u5f55 (Setting-&gt;Resources-&gt;File Sharing) </li> </ul> <pre><code># \u6302\u8f7d\u5bbf\u4e3b\u673a\u5df2\u5171\u4eab\u76ee\u5f55\u5230\u5bb9\u5668/share\u8282\u70b9\u4e0a\ndocker -it run ubuntu /bin/bash -v D:\\docker:/share\n</code></pre>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/#_2","title":"\u4f7f\u7528","text":""},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/#ubtun","title":"ubtun\u5f00\u53d1","text":"<pre><code># \u62c9\u53d6\u5b98\u65b9\u6700\u65b0\u7684ubuntu\u955c\u50cf \ndocker pull ubuntu\n# \u8fd0\u884c\u5e76\u7ec8\u7aef\u767b\u5f55-\u9000\u51fa\u4e0d\u4fdd\u5b58\u4fee\u6539\u8bb0\u5f55\ndocker run -it ubuntu /bin/bash\n\n# \u8fd0\u884c\u5e76\u7ec8\u7aef\u767b\u5f55\ndocker exec -it ubuntu /bin/bash\n\n# \u9000\u51fa\u5bb9\u5668\u7ec8\u7aef\u5e76\u505c\u6b62\u5bb9\u5668\u8fd0\u884c ctrl+q+p \u6216\u8005 exit\n# \u67e5\u770b\u5df2\u7ecf\u8fd0\u884c\u7684\u5bb9\u5668\ndocker ps\n\n# \u8fdb\u5165\u5df2\u7ecf\u8fd0\u884c\u7684\u5bb9\u5668\ndocker attach ContainId\n\n# \u67e5\u770b\u5bb9\u5668\u7aef\u53e3\u6620\u5c04\ndocker port ContainId\n\n# \u67e5\u770b\u65e5\u5fd7\u8f93\u51fa\ndocker logs -f ContainId\n\n# \u67e5\u770b\u5bb9\u5668\u5185\u90e8\u8fdb\u7a0b\ndocker top ContainId\n\n# \u62c9\u53d6\u5b98\u65b9\u955c\u50cf\ndocker login\ndocker pull hello-world\ndocker images\n\n# \u901a\u8fc7\u5bb9\u5668\u521b\u5efa\u81ea\u5df1\u7684\u955c\u50cf - \u8fd9\u91cc\u767b\u5f55\u7684\u662f\u963f\u91cc\u4e91\u7684\u4ed3\u5e93\ndocker login --username=\"hackxxxxxx.com\" --password=\"Dxxxx02b\" registry.cn-shenzhen.aliyuncs.com\ndocker commit ContainId ImgName\ndocker tag hello-world remoteSpaceName/ImgName:VersionTag\ndocker push remoteSpaceName/ImgName:VersionTag\n# \u62c9\u53d6\u81ea\u5df1\u4ed3\u5e93\u7684\u955c\u50cf\ndocker pull remoteSpaceName/ImgName:VersionTag\n\n# \u5bfc\u51fa\u5bb9\u5668\ndocker export ContainId &gt; ubuntu.tar\n\n# \u5bfc\u5165\u5bb9\u5668\ncat docker/ubuntu.tar | docker import - mark/ubuntu:v1\n# \u901a\u8fc7url\u6216\u8005\u6587\u4ef6\u8def\u5f84\u5bfc\u5165\u5bb9\u5668\ndocker import http://example.com/ubuntu.tar mark/ubuntu:v1\n</code></pre>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/#hanlp","title":"\u4f7f\u7528\u4ed3\u5e93hanlp\u955c\u50cf","text":"<pre><code>docker run --name hanlp -d  -p 8888:8888 registry.cn-shenzhen.aliyuncs.com/devan/hanlp-jupyterlab\n# \u663e\u793a\u65e5\u5fd7\ndocker logs -f hanlp\n</code></pre>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/#apt-get","title":"\u914d\u7f6eapt-get","text":"<pre><code># \u66f4\u6362\u56fd\u5185\u963f\u91cc\u6e90\nsed -i s@/archive.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list\nsed -i s@/security.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list\napt-get clean\n# \u66f4\u65b0\napt-get update\n</code></pre>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/#-","title":"\u8fdb\u9636-\u81ea\u52a8\u6784\u5efa","text":""},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/#github-actions","title":"GitHub Actions","text":"<p>GItHub Actions\u662f\u4e00\u4e2a\u6301\u7eed\u96c6\u6210\u548c\u6301\u7eed\u4ea4\u4ed8\u7684\u5e73\u53f0\uff0c\u80fd\u591f\u8ba9\u4f60\u81ea\u52a8\u5316\u4f60\u7684\u7f16\u8bd1\u3001\u6d4b\u8bd5\u548c\u90e8\u7f72\u6d41\u7a0b\u3002</p> <ul> <li>\u521b\u5efa\u4e00\u4e2adocker\u955c\u50cf\u4ed3\u5e93\uff08\u4f7f\u7528\u963f\u91cc\u4e91\uff09</li> </ul> <p></p> <ul> <li>\u8bbe\u7f6e <code>Repo Security</code></li> </ul> <p></p> <ul> <li>\u5728github\u4e0a\u521b\u5efa\u6d41\u6c34\u7ebf\u73af\u5883</li> </ul> <p>:+1: push\u540e\u4f1a\u81ea\u52a8\u89e6\u53d1\u6784\u5efa\u4efb\u52a1</p> <pre><code>name: Docker Image CI\non:\npush:\nbranches: [ main ]\npull_request:\nbranches: [ main ]\njobs:\nbuild:\nruns-on: ubuntu-latest\nsteps:\n- uses: actions/checkout@v2\n- name: Build the Docker image\nrun: | docker version\n# \u767b\u5f55\u963f\u91cc\u4e91\u955c\u50cf\u4ed3\u5e93\ndocker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }} registry.cn-shenzhen.aliyuncs.com\n# \u4f7f\u7528Dockerfile\u6784\u5efa\u955c\u50cf\ndocker build . --file Dockerfile --tag registry.cn-shenzhen.aliyuncs.com/devan/hanlp-jupyterlab\n# \u63a8\u9001\u955c\u50cf\u5230\u955c\u50cf\u4ed3\u5e93 - \u8fd9\u91cc\u5bf9\u5e94 https://cr.console.aliyun.com/cn-shenzhen/instance/repositories\ndocker push registry.cn-shenzhen.aliyuncs.com/hanlp/hanlp_lab\n</code></pre> <ul> <li>\u63a8\u9001\u5bf9\u5e94 <code>Dockerfile</code> \u6765\u8fdb\u884c\u6784\u5efa</li> </ul> <pre><code>FROM python:3.9.0\nRUN pip --no-cache-dir install hanlp[full]\nRUN pip install jupyterlab\n\nWORKDIR /jupyter\nEXPOSE 8888\nCMD [\"bash\", \"-c\", \"jupyter lab --notebook-dir=/jupyter --ip 0.0.0.0 --no-browser --allow-root\"]\n</code></pre> <p>:+1:\u51fa\u73b0\u4ee5\u4e0b\u8bf4\u660e\u6d41\u6c34\u7ebf\u5df2\u7ecf\u81ea\u52a8\u8dd1\u8d77\u6765\u4e86</p> <p></p>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/#play-with-docker","title":"play-with-docker","text":""},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/#docker-compose","title":"docker-compose","text":""},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/#step-1-define-the-application-dependencies","title":"Step 1: Define the application dependencies","text":"<ol> <li>Create a directory for the project:</li> </ol> <pre><code>$ mkdir composetest\n$ cd composetest\n</code></pre> <ol> <li>Create a file called <code>app.py</code> in your project directory and paste the following code in:</li> </ol> <pre><code>import time\nimport redis\nfrom flask import Flask\napp = Flask(__name__)\n# \u901a\u8fc7\u4e0e\u5bb9\u5668\u540d\u76f8\u540c\u7684\u57df\u540d\u53ef\u8bbf\u95ee\u5bf9\u5e94\u5bb9\u5668(compose\u81ea\u52a8\u751f\u6210)\ncache = redis.Redis(host='redis', port=6379)\ndef get_hit_count():\nretries = 5\nwhile True:\ntry:\nreturn cache.incr('hits')\nexcept redis.exceptions.ConnectionError as exc:\nif retries == 0:\nraise exc\nretries -= 1\ntime.sleep(0.5)\n@app.route('/')\ndef hello():\ncount = get_hit_count()\nreturn 'Hello World! I have been seen {} times.\\n'.format(count)\n</code></pre> <ol> <li>Create another file called <code>requirements.txt</code> in your project directory and paste the following code in:</li> </ol> <pre><code>flask\nredis\n</code></pre>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/#step-2-create-a-dockerfile","title":"Step 2: Create a Dockerfile","text":"<p>The Dockerfile is used to build a Docker image. The image contains all the dependencies the Python application requires, including Python itself.</p> <p>In your project directory, create a file named <code>Dockerfile</code> and paste the following code in:</p> <pre><code># syntax=docker/dockerfile:1\nFROM python:3.7-alpine\nWORKDIR /code\nENV FLASK_APP=app.py\nENV FLASK_RUN_HOST=0.0.0.0\nRUN apk add --no-cache gcc musl-dev linux-headers\nCOPY requirements.txt requirements.txt\nRUN pip install -r requirements.txt\nEXPOSE 5000\nCOPY . .\nCMD [\"flask\", \"run\"]\n</code></pre>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/#step-3-define-services-in-a-compose-file","title":"Step 3: Define services in a Compose file","text":"<p>Create a file called <code>docker-compose.yml</code> in your project directory and paste the following:</p> <pre><code>version: \"3.9\"\nservices:\nweb:\nbuild: .\nports:\n- \"8000:5000\"\nredis:\nimage: \"redis:alpine\"\n</code></pre> <p>This Compose file defines two services: <code>web</code> and <code>redis</code>.</p> <p>The <code>web</code> service uses an image that\u2019s built from the <code>Dockerfile</code> in the current directory. It then binds the container and the host machine to the exposed port, <code>8000</code>. This example service uses the default port for the Flask web server, <code>5000</code>.</p> <p>The <code>redis</code> service uses a public Redis image pulled from the Docker Hub registry.</p>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/#step-4-build-and-run-your-app-with-compose","title":"Step 4: Build and run your app with Compose","text":"<ol> <li>From your project directory, start up your application by running <code>docker compose up</code>.</li> </ol> <pre><code>$ docker compose up\n\nCreating network \"composetest_default\" with the default driver\nCreating composetest_web_1 ...\nCreating composetest_redis_1 ...\nCreating composetest_web_1\nCreating composetest_redis_1 ... done\nAttaching to composetest_web_1, composetest_redis_1\nweb_1    |  * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)\nredis_1  | 1:C 17 Aug 22:11:10.480 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\nredis_1  | 1:C 17 Aug 22:11:10.480 # Redis version=4.0.1, bits=64, commit=00000000, modified=0, pid=1, just started\nredis_1  | 1:C 17 Aug 22:11:10.480 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf\nweb_1    |  * Restarting with stat\nredis_1  | 1:M 17 Aug 22:11:10.483 * Running mode=standalone, port=6379.\nredis_1  | 1:M 17 Aug 22:11:10.483 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.\nweb_1    |  * Debugger is active!\nredis_1  | 1:M 17 Aug 22:11:10.483 # Server initialized\nredis_1  | 1:M 17 Aug 22:11:10.483 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.\n</code></pre> <ol> <li>Enter http://localhost:8000/ in a browser to see the application running.</li> </ol> <p>If this doesn\u2019t resolve, you can also try http://127.0.0.1:8000.</p> <p>You should see a message in your browser saying:</p> <pre><code>Hello World! I have been seen 1 times.\n</code></pre>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/#step-5-edit-the-compose-file-to-add-a-bind-mount","title":"Step 5: Edit the Compose file to add a bind mount","text":"<p>Edit <code>docker-compose.yml</code> in your project directory to add a bind mount for the <code>web</code> service:</p> <pre><code>version: \"3.9\"\nservices:\nweb:\nbuild: .\nports:\n- \"8000:5000\"\nvolumes:\n- .:/code\nenvironment:\nFLASK_DEBUG: \"true\"\nredis:\nimage: \"redis:alpine\"\n</code></pre> <p>The new <code>volumes</code> key mounts the project directory (current directory) on the host to <code>/code</code> inside the container, allowing you to modify the code on the fly, without having to rebuild the image. The <code>environment</code> key sets the <code>FLASK_DEBUG</code> environment variable, which tells <code>flask run</code> to run in development mode and reload the code on change. This mode should only be used in development.</p>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/docker/#step-6-re-build-and-run-the-app-with-compose-change-apppy","title":"Step 6: Re-build and run the app with Compose &amp;&amp; change <code>app.py</code>","text":"<p>Change the greeting in <code>app.py</code> and save it. For example, change the <code>Hello World!</code> message to <code>Hello from Docker!</code>:</p> <pre><code>    #return 'Hello World! I have been seen {} times.\\n'.format(count)\nreturn 'Hello from Docker! I have been seen {} times.\\n'.format(count)\n</code></pre>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/mkdocs/","title":"mkdocs","text":""},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/mkdocs/#_1","title":"\u521b\u5efa\u9879\u76ee","text":"<pre><code>   3 pip install mkdocs mkdocs-material\n   # \u521b\u5efa\u9879\u76ee\n5 mkdocs new my-project\n   # \u6dfb\u52a0\u4e3b\u9898 name: material\n8 notepad.exe .\\mkdocs.yml\n  13 mkdocs serve\n  15 git init .\n  16 git remote add origin https://gitee.com/git4mark/docs.git\n  19 git add .\n  20 git commit -m \"1st build\"\n24 git push --set-upstream origin master\n  25 git push\n  # \u6b64\u64cd\u4f5c\u662f\u63a8\u9001\u5230gh-pages\u5206\u652f\uff0c\u5fc5\u987b\u8fd9\u4e48\u505a\uff01\n26 mkdocs.exe gh-deploy\n</code></pre>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/mkdocs/#gitee","title":"gitee\u8bbe\u7f6e","text":"<p>\u9879\u76ee\u9875\u9762-\u300b\u670d\u52a1\u6807\u7b7e-\u300bGitee Pages\u6253\u5f00\u914d\u7f6e</p>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/mkdocs/#_2","title":"\u6587\u6863\u914d\u7f6e","text":"<p>yaml</p> <p>mkdocs</p> <ul> <li>\u5de6\u4fa7\u5bfc\u822a\u6761</li> </ul> <pre><code>nav:\n- \u4e00. \u4ecb\u7ecd: index.md\n- \u4e8c. \u5b89\u88c5:\n- 1. \u672c\u5730\u73af\u5883\u642d\u5efa: install/local.md\n- 2. \u53d1\u5e03\u81f3GitHub Pages: install/github-pages.md\n- 3. \u53d1\u5e03\u81f3\u81ea\u5df1\u7684HTTP Server: install/http-server.md\n- \u4e09. \u8bed\u6cd5:\n- 1. \u8bed\u6cd5\u603b\u89c8: syntax/main.md\n- 2. \u6807\u9898: syntax/headline.md\n- 3. \u6bb5\u843d: syntax/paragraph.md # (1)\n</code></pre>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/mkdocs/#drawio","title":"\u8fdb\u9636\uff08\u642d\u914ddrawio\uff09","text":"<p>\u53c2\u8003</p> <ul> <li>\u5b89\u88c5</li> </ul> <pre><code>pip install mkdocs-drawio-exporter\n</code></pre> <ul> <li>\u914d\u7f6e</li> </ul> <p>1\uff09\u9700\u8981\u5b89\u88c5draw.io\u4e14\u914d\u7f6e\u73af\u5883\u53d8\u91cf\u5230PATH</p> <p>2\uff09draw\u6587\u4ef6\u8def\u5f84\u4e0d\u80fd\u5305\u542b\u4e2d\u6587</p> <p>3\uff09 yaml\u6587\u4ef6\u4e2d\u914d\u7f6e</p> <pre><code>plugins:\n- search # built-in search must be always activated\n- drawio-exporter\n</code></pre> <ul> <li>\u4f7f\u7528</li> </ul> <pre><code>![My alt text](my-diagram.drawio)\n# \u591a\u9875\n![Page 1](my-diagram.drawio#0)\n</code></pre>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#adb","title":"adb\u76f8\u5173","text":"<ul> <li>\u67e5\u627e\u8bbe\u5907</li> </ul> <pre><code>adb devices\n</code></pre> <ul> <li>\u83b7\u53d6\u5f53\u524d Activity</li> </ul> <pre><code>adb shell dumpsys activity activities | findstr mResumedActivity\n</code></pre> <ul> <li>\u62c9\u53d6\u5f53\u524d apk \u5230\u672c\u5730</li> </ul> <pre><code>adb shell pm path packageName\nadb pull xxx.apk .\n# PS D:\\docs&gt; adb shell pm path cn.soulapp.android\n# package:/data/app/cn.soulapp.android-p0zMa4iCS9lt56ETMszpxg==/base.apk\n</code></pre>"},{"location":"%E5%99%A8/%E5%B7%A5%E5%85%B7/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#git","title":"git\u76f8\u5173","text":"<ul> <li>\u65b0\u5efa\u65b0\u4ed3\u5e93</li> </ul> <pre><code>git clone https://jihulab.com/1987/mydocs.git\ncd mydocs\ngit switch -c main\ntouch README.md\ngit add README.md\ngit commit -m \"add README\"\ngit push -u origin main\n</code></pre> <ul> <li>\u63a8\u9001\u73b0\u6709\u672c\u5730\u4ed3\u5e93</li> </ul> <pre><code>git init --initial-branch=main\ngit remote add origin https://jihulab.com/1987/mydocs.git\ngit add .\ngit commit -m \"Initial commit\"\ngit push -u origin main\n</code></pre> <ul> <li>\u63a8\u9001\u73b0\u6709\u8fdc\u7a0b\u4ed3\u5e93</li> </ul> <pre><code>git remote rename origin old-origin\ngit remote add origin https://jihulab.com/1987/mydocs.git\ngit push -u origin --all\ngit push -u origin --tags\n</code></pre> <ul> <li>\u83b7\u53d6add\u672acommit\u4fee\u6539</li> </ul> <pre><code>git add\ngit diff --cached\n</code></pre> <ul> <li>\u5220\u9664\u672a\u5ffd\u7565\u4e14\u5df2\u7ecfpush\u5230\u8fdc\u7a0b\u7684\u6587\u4ef6</li> </ul> <pre><code>git rm -r --cached xxx\n# \u4fee\u6539.gitignore\ngit add .\ngit commit -am \"gitignore\u6587\u4ef6\u4fee\u6539\u5220\u9664XXX\u6587\u4ef6\"\n</code></pre>"},{"location":"%E6%9C%AF/Code/unity/","title":"unity","text":""},{"location":"%E6%9C%AF/Code/unity/#_1","title":"\u89e3\u51b3\u52a0\u8f7d\u5927\u56fe\u7247\u5de8\u5361\u95ee\u9898","text":"<ul> <li>\u4f7f\u7528RawImage\u800c\u4e0d\u662fImage</li> </ul>"},{"location":"%E6%9C%AF/%E6%A1%86%E6%9E%B6/ART%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/","title":"ART\u6d41\u7a0b\u5206\u6790","text":"<ul> <li>ART\u865a\u62df\u673a\u542f\u52a8\u5206\u6790</li> <li>ART\u865a\u62df\u673a\u8fd0\u884c\u5206\u6790</li> </ul> <p>\u6d41\u7a0b\u57fa\u4e8e android 11\u6e90\u7801 \uff0c \u53c2\u8003 \u8001\u7f57\u7684\u535a\u5ba2</p> <ul> <li> <p>Android\u8fdb\u7a0bfork\u81eaZygote\u8fdb\u7a0b\uff0c\u672c\u8d28\u8fd8\u662fLinux\u8fdb\u7a0b</p> </li> <li> <p>ART\u865a\u62df\u673a\u6d41\u7a0b\u53ef\u4ee5\u9605\u8bfb\u4ee5\u4e0b\u51e0\u4e2a\u7c7b\u5e2e\u52a9\u68b3\u7406\u6574\u4e2ajvm\u6846\u67b6\u3002</p> </li> </ul> <p>runtime\u3001thread_list\u3001thread\u3001signal_catcher\u3001class_linker\u3001intern_table\u3001java_vm_ext</p> <ul> <li>JVM\u5bf9\u5e94\u8fdb\u7a0b\uff0cJNIEev\u662f\u7ebf\u7a0b\u72ec\u6709</li> </ul>"},{"location":"%E6%9C%AF/%E6%A1%86%E6%9E%B6/ART%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/#art","title":"ART\u865a\u62df\u673a\u542f\u52a8\u5206\u6790","text":"<ol> <li> <p>\u521b\u5efa\u4e86\u865a\u62df\u673a\u5b9e\u4f8b\uff1b</p> </li> <li> <p>\u52a0\u8f7d\u4e86Java\u6838\u5fc3\u7c7b\uff08\u7531zygote\uff09\u53ca\u5176JNI\u65b9\u6cd5\uff1b</p> </li> <li> <p>\u4e3a\u4e3b\u7ebf\u7a0b\u7684\u8bbe\u7f6e\u4e86\u4e00\u4e2aJNI\u73af\u5883\uff1b</p> </li> <li> <p>\u6ce8\u518c\u4e86Android\u6838\u5fc3\u7c7b\u7684JNI\u65b9\u6cd5\u3002</p> </li> </ol> <p></p> <pre><code>//init.rc\nservice zygote /system/bin/app_process -Xzygote /system/bin --zygote --start-system-server\nxref: /frameworks/base/cmds/app_process/app_main.cpp\n173  int main(int argc, char* const argv[])\n185      AppRuntime runtime(argv[0], computeArgBlockSize(argc, argv));\n-&gt;\n34  class AppRuntime : public AndroidRuntime\n338          runtime.start(\"com.android.internal.os.RuntimeInit\", args, zygote);\n//=============================================================================================\nxref: /frameworks/base/core/jni/AndroidRuntime.cpp\n1136  void AndroidRuntime::start(const char* className, const Vector&lt;String8&gt;&amp; options, bool zygote)\n1193      if (startVm(&amp;mJavaVM, &amp;env, zygote, primary_zygote) != 0) {\n1201      if (startReg(env) &lt; 0) {  //\u8bbe\u7f6eNativeFrameStack\u5927\u5c0f\u3001\u6ce8\u518cJNI\u51fd\u6570\n1239          jmethodID startMeth = env-&gt;GetStaticMethodID(startClass, \"main\",\n1240              \"([Ljava/lang/String;)V\");\n1245              env-&gt;CallStaticVoidMethod(startClass, startMeth, strArray);   //ART\u865a\u62df\u673a\u771f\u6b63\u8fd0\u884c\n-&gt;\n609  int AndroidRuntime::startVm(JavaVM** pJavaVM, JNIEnv** pEnv, bool zygote, bool primary_zygote)\n1095      if (JNI_CreateJavaVM(pJavaVM, pEnv, &amp;initArgs) &lt; 0) {\n//=============================================================================================\nxref: /art/runtime/jni/java_vm_ext.cc\n1195  extern \"C\" jint JNI_CreateJavaVM(JavaVM** p_vm, JNIEnv** p_env, void* vm_args) {\n1225    *p_env = Thread::Current()-&gt;GetJniEnv();    //\u83b7\u53d6\u4e4b\u524d\u5df2\u7ecf\u5728Attach\u6d41\u7a0b\u5b9e\u4f8b\u5316JniEnv\n1226    *p_vm = runtime-&gt;GetJavaVM();\n</code></pre> <ul> <li>JniEnv\u521b\u5efa\u5728JNIEnvExt::Create\uff0c\u4e3b\u8981\u521d\u59cb\u5316\u4e86native\u51fd\u6570\u8868\u3002</li> </ul> <pre><code>xref: /art/runtime/thread.cc\n980  Thread* Thread::Attach(const char* thread_name, bool as_daemon, PeerAction peer_action) {\n999        bool init_success = self-&gt;Init(runtime-&gt;GetThreadList(), runtime-&gt;GetJavaVM());\n-&gt;\n967      tlsPtr_.jni_env = JNIEnvExt::Create(this, java_vm, &amp;error_msg);\n//=============================================================================================\nxref: /art/runtime/jni/jni_env_ext.cc\n68  JNIEnvExt* JNIEnvExt::Create(Thread* self_in, JavaVMExt* vm_in, std::string* error_msg) {\n69    std::unique_ptr&lt;JNIEnvExt&gt; ret(new JNIEnvExt(self_in, vm_in, error_msg));\n-&gt;\n76  JNIEnvExt::JNIEnvExt(Thread* self_in, JavaVMExt* vm_in, std::string* error_msg)\n87    functions = GetFunctionTable(check_jni_);\n-&gt;\n323    return check_jni ? GetCheckJniNativeInterface() : GetJniNativeInterface();   //AndroidMainfest.xml\u4e2ddebuggable\u63a7\u5236\n//=============================================================================================\nxref: /art/runtime/jni/jni_internal.cc\n2962  const JNINativeInterface* GetJniNativeInterface() {\n2963    // The template argument is passed down through the Encode/DecodeArtMethod/Field calls so if\n2964    // JniIdType is kPointer the calls will be a simple cast with no branches. This ensures that\n2965    // the normal case is still fast.\n2966    return Runtime::Current()-&gt;GetJniIdType() == JniIdType::kPointer\n2967               ? &amp;JniNativeInterfaceFunctions&lt;false&gt;::gJniNativeInterface\n2968               : &amp;JniNativeInterfaceFunctions&lt;true&gt;::gJniNativeInterface;\n2969  }\n</code></pre> <ul> <li>JavaVM\u521b\u5efa\u5728JavaVMExt::Create\u4e2d\uff0c\u4e3b\u8981\u8bbe\u7f6ejvm\u53c2\u6570\u3001\u8bbe\u7f6eaot\u7f16\u8bd1\u903b\u8f91\u7b49\uff0c\u4ee5\u53caattach\u4e3b\u7ebf\u7a0b</li> </ul> <pre><code>xref: /art/runtime/runtime.cc\n763  bool Runtime::Create(const RuntimeOptions&amp; raw_options, bool ignore_unrecognized) {\n765    return ParseOptions(raw_options, ignore_unrecognized, &amp;runtime_options) &amp;&amp;\n766        Create(std::move(runtime_options));\n746  bool Runtime::Create(RuntimeArgumentMap&amp;&amp; runtime_options) {\n751    instance_ = new Runtime;\n752    Locks::SetClientCallback(IsSafeToCallAbort);\n753    if (!instance_-&gt;Init(std::move(runtime_options))) {\n-&gt;\n1186  bool Runtime::Init(RuntimeArgumentMap&amp;&amp; runtime_options_in) {\n937    SetUpAlternateSignalStack();\n941    InitCpu();\n942    InitTlsEntryPoints();\n943    RemoveSuspendTrigger();\n944    InitCardTable();\n945    InitTid();\n... //\u521d\u59cb\u5316\u7684\u4ee3\u7801\u5f88\u957f\uff0c\u5305\u62ec\u8bbe\u7f6ejvm\u53c2\u6570\u3001aot\u7f16\u8bd1\u7684\u903b\u8f91\u7b49\u90fd\u5728\u8fd9\u91cc\u8fdb\u884c,java_vm_\u5c31\u662f\u5b9e\u4f8b\u5316\u7684vm\u5bf9\u8c61\n1536    java_vm_ = JavaVMExt::Create(this, runtime_options, &amp;error_msg);\n1551    Thread* self = Thread::Attach(\"main\", false, nullptr, false);   //main\u7ebf\u7a0b\u5728\u8fd9\u91cc\u7ed1\u5b9a\n</code></pre>"},{"location":"%E6%9C%AF/%E6%A1%86%E6%9E%B6/ART%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/#art_1","title":"ART\u865a\u62df\u673a\u8fd0\u884c\u5206\u6790","text":"<pre><code>xref: /frameworks/base/core/jni/AndroidRuntime.cpp\n1136  void AndroidRuntime::start(const char* className, const Vector&lt;String8&gt;&amp; options, bool zygote)\n1245              env-&gt;CallStaticVoidMethod(startClass, startMeth, strArray);\nxref: /art/runtime/jni/check_jni.cc\n2311    static void CallStaticVoidMethod(JNIEnv* env, jclass c, jmethodID mid, ...) {\n2314      CallMethodV(__FUNCTION__, env, nullptr, c, mid, vargs, Primitive::kPrimVoid, kStatic);\n//\u8fd9\u91cc\u533a\u5206\u4e0d\u540c\u7684\u8c03\u7528\u7c7b\u578b\u6267\u884c\n3271            switch (invoke) {\n3272              case kVirtual:\n3273                result.L = baseEnv(env)-&gt;CallObjectMethodV(env, obj, mid, vargs);\n3274                break;\n3275              case kDirect:\n3276                result.L = baseEnv(env)-&gt;CallNonvirtualObjectMethodV(env, obj, c, mid, vargs);\n3277                break;\n3278              case kStatic:\n3279                result.L = baseEnv(env)-&gt;CallStaticObjectMethodV(env, c, mid, vargs);\n3280                break;\n3281              default:\n3282                LOG(FATAL) &lt;&lt; \"Unexpected invoke: \" &lt;&lt; invoke;\n3283            }\n</code></pre>"},{"location":"%E6%9C%AF/%E6%A1%86%E6%9E%B6/binder%E8%B5%B0%E8%AF%BB/","title":"binder\u8d70\u8bfb","text":"<pre><code>// \u8c03\u7528\u5173\u7cfb\u94fe\n// /frameworks/native/cmds/servicemanager/service_manager.c\nmain\nbs = binder_open(driver, 128*1024);\nif (binder_become_context_manager(bs)) {\nbinder_loop(bs, svcmgr_handler);\n// /frameworks/native/cmds/servicemanager/binder.c\nbs-&gt;fd = open(driver, O_RDWR | O_CLOEXEC);\nint result = ioctl(bs-&gt;fd, BINDER_SET_CONTEXT_MGR_EXT, &amp;obj);\nresult = ioctl(bs-&gt;fd, BINDER_SET_CONTEXT_MGR, 0);\nres = ioctl(bs-&gt;fd, BINDER_WRITE_READ, &amp;bwr);\n// \u9a71\u52a8\u5c42\u7684binder...\n</code></pre> <ul> <li> <p>\u4e3a\u4ec0\u4e48\u4f7f\u7528socket\u4f5c\u4e3azygote\u901a\u4fe1</p> </li> <li> <p>zygote\u8fdb\u7a0b\u8fdb\u7a0b\u65e0\u6cd5\u4fdd\u8bc1\u6ce8\u518cBinder\u65f6\uff0cinit\u8fdb\u7a0b\u5df2\u7ecf\u5b8c\u6210SeverManger\u7684\u521d\u59cb\u5316</p> </li> <li>Binder\u670d\u52a1\u7aef\u4f1a\u521b\u5efa\u7ebf\u7a0b\u6765\u63a5\u6536Binder\u9a71\u52a8\u6570\u636e\uff0c\u800cfork\u591a\u7ebf\u7a0b\u7684\u8fdb\u7a0b\u5bb9\u6613\u9020\u6210\u6b7b\u9501</li> <li>\u5982\u679czygote\u8fdb\u7a0b\u4f7f\u7528Binder\u4f5c\u4e3a\u901a\u4fe1\uff0c\u5219\u6bcf\u6b21fork\u51fa\u6765\u7684\u8fdb\u7a0b\u591a\u4f7f\u7528Binder\u5bf9\u8c61\u6d88\u8017\u7684\u5185\u5b58</li> </ul>"}]}